[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nova-act-qa"
version = "1.0"
readme = "README.md"
dependencies = [
  "nova-act (>=1.0.2734.0,<2.0.0.0)",
  "pytest (>=8.3.5,<9.0.0)",
  "pytest-html (>=4.1.1,<5.0.0)",
  "pydantic (>=2.11.5,<3.0.0)",
  "pydantic-settings (>=2.9.1,<3.0.0)",
  "python-dotenv (>=1.1.0,<2.0.0)",
  "json-compare-deep (>=2.0,<3.0)",
  "pytest-xdist (>=3.6.1,<4.0.0)",
  "pytest-html-nova-act (>=1.0.0,<2.0.0)",
]
requires-python = ">=3.11"

[tool.hatch.envs.default]
# This controls what version of Python you want to be the default
# when running any scripts or tools to do things like debug test failures
# or do general development.  It's lockfile is ./requirements.txt
python = "3.12"
dependencies = [
    "pytest",
    "mypy",
]

[tool.pytest.ini_options]
filterwarnings = "ignore::pytest.PytestUnhandledThreadExceptionWarning"
addopts = "-n auto --html=reports/report.html --self-contained-html --add-nova-act-report"


[tool.hatch.build]
directory = "./build"

[tool.hatch.env]
requires = [ "hatch-pip-compile" ]

[tool.hatch.envs.default.scripts]
# These are scripts you can run using `brazil-build run <script-name>`
typing = [
  "mkdir -p .mypy_cache",
  "mypy --install-types --non-interactive src/amzn_ace_nova_act_qa tests"
]

# This command is for updating all your lock files across all environments 
update = [ "hatch-pip-compile --upgrade --all" ]

release = [
    "typing",
    "hatch test --all --cover",
]

[[tool.hatch.envs.hatch-test.matrix]]
# This defines multiple variables you can generate combinations
# to test underneath different environments.  A separate environment and 
# lock file will be created for every combination located in `./requirements/`
python = ["3.11", "3.12"]

## This environment is used solely to generate a lock file on hatch,
# and hatch-pip-compile that can be automatically updated
[tool.hatch.envs.build-tools]
# This version states what version your build tools build with.  To change it,
# you will need to:
# * Remove the `requirements/requirements-build-tools.txt` file
# * Run `brazil-build run update` to generate a new lock file for the environment
python = "3.12"
detached = true
skip-install = true
dependencies = [
  "hatch",
  "hatch-pip-compile",
]

# PeruHatch repository and package locking plugin
[tool.hatch.env.collectors.custom]
path = ".hatch/hatch_plugin.py"

# This is necessary to use 'uv' as the resolver if this is the top-level package
# in a monorepo (which is usually the case).  Remove this if copying the
# package into a monorepo
[tool.uv.workspace]
